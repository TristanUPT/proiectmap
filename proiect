#include <iostream>
#include <vector>
#include <stack>
#ifdef _WIN32
#include <windows.h>
#else
#include <unistd.h>
#endif


using namespace std;

void displayTowers() {
    cout << "-----------------------------------------------------\n";
    for (int i = rods.size() - 1; i >= 0; --i) {
        cout << "Tija " << (char)('A' + i) << ": ";
        stack<int> temp = rods[i];
        while (!temp.empty()) {
            cout << temp.top() << " ";
            temp.pop();
        }
        cout << endl;
    }
    cout << "-----------------------------------------------------\n";
  #ifdef _WIN32
    Sleep(100); 
#else
    usleep(100000); 
#endif

}
}

void towerOfHanoi(int n, int source, int auxiliary, int destination) {
    if (n > 0) {
        towerOfHanoi(n - 1, source, destination, auxiliary);
        int disk = rods[source].top();
        rods[source].pop();
        rods[destination].push(disk);
        moves++;
        cout << "Muta discul " << disk << " din tija " << (char)('A' + source) << " la tija " << (char)('A' + destination) << endl;
        displayTowers();
        towerOfHanoi(n - 1, auxiliary, source, destination);
    }
}

void automatedGame(int n) {
    cout << "Turnul din Hanoi pentru " << n << " discuri:\n";
    for (int i = n; i > 0; --i) {
        rods[0].push(i);
    }
    displayTowers();
    towerOfHanoi(n, 0, 1, 2);
}

int main() {
    cout << "Turnul din Hanoi minigame\n";
    cout << "1. Regulile jocului.\n";
    cout << "2. Joaca singur\n";
    cout << "3. Lasa minigame-ul sa joace pentru tine\n";

    int choice;
    cout << "Selecteaza o optiune:";
    cin >> choice;