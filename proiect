#include <iostream>
#include <vector>
#include <stack>
#include <unistd.h>

using namespace std;

void displayTowers() {
    cout << "-----------------------------------------------------\n";
    for (int i = rods.size() - 1; i >= 0; --i) {
        cout << "Rod" << (char)('A' + i) << ": ";
        stack<int> temp = rods[i];
        while (!temp.empty()) {
            cout << temp.top() << " ";
            temp.pop();
        }
        cout << endl;
    }
    cout << "-----------------------------------------------------\n";
    usleep(100000); 

}
void towerOfHanoi(int n, int source, int auxiliary, int destination) {
    if (n > 0) {
        towerOfHanoi(n - 1, source, destination, auxiliary);
        int disk = rods[source].top();
        rods[source].pop();
        rods[destination].push(disk);
        moves++;
        cout << "Move disk " << disk << " from rod " << (char)('A' + source) << " to rod " << (char)('A' + destination) << endl;
        displayTowers();
        towerOfHanoi(n - 1, auxiliary, source, destination);
    }
}

int main() {
    int n;
    char tijaA = 'A', tijaB = 'B', tijaC = 'C';

    int choice; // meniu
    do {
        cout << "Meniu:\n";
        cout << "1. Rezolva problema Turnurilor din Hanoi\n";
        cout << "0. Iesire\n";
        cout << "Alegeti optiunea: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Introduceti numarul de discuri: ";
                cin >> n;
                for (int i = 0; i < n; i++) {
                    cout << "Pasul " << i + 1 << ":" << endl;
                    hanoi(i + 1, 'A', 'B', 'C');
                    cout << endl;
                }
                break;
        }
    } while (choice != 0);

    return 0;
}
